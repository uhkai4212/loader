-- Sleek Script Executor with Code Icon
-- Clean design with no corners/edges but with glow/shadow effects
-- By Claude - April 2025

local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local CoreGui = game:GetService("CoreGui")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")

local Player = Players.LocalPlayer

-- Color Theme (Modern dark theme with accent)
local Colors = {
    Background = Color3.fromRGB(25, 25, 35),
    BackgroundSecondary = Color3.fromRGB(20, 20, 30),
    Accent = Color3.fromRGB(110, 130, 255),
    AccentSecondary = Color3.fromRGB(80, 100, 255),
    Text = Color3.fromRGB(230, 230, 250),
    TextDim = Color3.fromRGB(160, 160, 200),
    Positive = Color3.fromRGB(100, 230, 160),
    Warning = Color3.fromRGB(255, 190, 100),
    Negative = Color3.fromRGB(255, 100, 130),
    Shadow = Color3.fromRGB(0, 0, 10),
    Glow = Color3.fromRGB(120, 140, 255)
}

-- GUI Setup
local ExecutorGui = Instance.new("ScreenGui")
ExecutorGui.Name = "CodeExecutor"
ExecutorGui.ResetOnSpawn = false
ExecutorGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

-- Try to parent to CoreGui for persistence
pcall(function()
    ExecutorGui.Parent = CoreGui
end)

-- If failed, parent to PlayerGui
if not ExecutorGui.Parent then
    ExecutorGui.Parent = Player:WaitForChild("PlayerGui")
end

-- Main Container (Small and clean)
local MainFrame = Instance.new("Frame")
MainFrame.Name = "MainContainer"
MainFrame.Size = UDim2.new(0, 240, 0, 120)
MainFrame.Position = UDim2.new(0.5, -120, 0.5, -60)
MainFrame.BackgroundColor3 = Colors.Background
MainFrame.BorderSizePixel = 0
MainFrame.Parent = ExecutorGui

-- Glow effect
local Glow = Instance.new("ImageLabel")
Glow.Name = "Glow"
Glow.BackgroundTransparency = 1
Glow.Size = UDim2.new(1.5, 0, 1.5, 0)
Glow.Position = UDim2.new(-0.25, 0, -0.25, 0)
Glow.ZIndex = -1
Glow.Image = "rbxassetid://5028857084" -- Soft glow texture
Glow.ImageColor3 = Colors.Glow
Glow.ImageTransparency = 0.8
Glow.Parent = MainFrame

-- Shadow effect
local Shadow = Instance.new("ImageLabel")
Shadow.Name = "Shadow"
Shadow.Size = UDim2.new(1, 40, 1, 40)
Shadow.Position = UDim2.new(0, -20, 0, -20)
Shadow.BackgroundTransparency = 1
Shadow.Image = "rbxassetid://5554236805"
Shadow.ImageColor3 = Colors.Shadow
Shadow.ImageTransparency = 0.5
Shadow.ScaleType = Enum.ScaleType.Slice
Shadow.SliceCenter = Rect.new(23, 23, 277, 277)
Shadow.ZIndex = -2
Shadow.Parent = MainFrame

-- Header section
local Header = Instance.new("Frame")
Header.Name = "Header"
Header.Size = UDim2.new(1, 0, 0, 28)
Header.BackgroundColor3 = Colors.BackgroundSecondary
Header.BorderSizePixel = 0
Header.Parent = MainFrame

-- Create the code icon (<>)
local CodeIcon = Instance.new("Frame")
CodeIcon.Name = "CodeIcon"
CodeIcon.Size = UDim2.new(0, 24, 0, 24)
CodeIcon.Position = UDim2.new(0, 8, 0, 2)
CodeIcon.BackgroundTransparency = 1
CodeIcon.Parent = Header

-- Left angle bracket (<)
local LeftBracket = Instance.new("TextLabel")
LeftBracket.Name = "LeftBracket"
LeftBracket.Size = UDim2.new(0, 12, 0, 24)
LeftBracket.Position = UDim2.new(0, 0, 0, 0)
LeftBracket.BackgroundTransparency = 1
LeftBracket.Font = Enum.Font.Code
LeftBracket.TextColor3 = Colors.Accent
LeftBracket.TextSize = 16
LeftBracket.Text = "<"
LeftBracket.Parent = CodeIcon

-- Right angle bracket (>)
local RightBracket = Instance.new("TextLabel")
RightBracket.Name = "RightBracket"
RightBracket.Size = UDim2.new(0, 12, 0, 24)
RightBracket.Position = UDim2.new(0, 12, 0, 0)
RightBracket.BackgroundTransparency = 1
RightBracket.Font = Enum.Font.Code
RightBracket.TextColor3 = Colors.Accent
RightBracket.TextSize = 16
RightBracket.Text = ">"
RightBracket.Parent = CodeIcon

-- Title
local Title = Instance.new("TextLabel")
Title.Name = "Title"
Title.Size = UDim2.new(1, -70, 1, 0)
Title.Position = UDim2.new(0, 38, 0, 0)
Title.BackgroundTransparency = 1
Title.Font = Enum.Font.GothamSemibold
Title.TextColor3 = Colors.Text
Title.TextSize = 13
Title.Text = "Script Executor"
Title.TextXAlignment = Enum.TextXAlignment.Left
Title.Parent = Header

-- Close Button
local CloseButton = Instance.new("TextButton")
CloseButton.Name = "CloseButton"
CloseButton.Size = UDim2.new(0, 28, 0, 28)
CloseButton.Position = UDim2.new(1, -28, 0, 0)
CloseButton.BackgroundTransparency = 1
CloseButton.Text = "Ã—"
CloseButton.TextColor3 = Colors.TextDim
CloseButton.TextSize = 20
CloseButton.Font = Enum.Font.GothamBold
CloseButton.Parent = Header

-- Script Count
local CountLabel = Instance.new("TextLabel")
CountLabel.Name = "CountLabel"
CountLabel.Size = UDim2.new(1, -16, 0, 16)
CountLabel.Position = UDim2.new(0, 8, 0, 32)
CountLabel.BackgroundTransparency = 1
CountLabel.Font = Enum.Font.Gotham
CountLabel.TextColor3 = Colors.TextDim
CountLabel.TextSize = 11
CountLabel.Text = "Loading scripts..."
CountLabel.TextXAlignment = Enum.TextXAlignment.Left
CountLabel.Parent = MainFrame

-- Input Box
local InputBox = Instance.new("TextBox")
InputBox.Name = "InputBox"
InputBox.Size = UDim2.new(1, -16, 0, 26)
InputBox.Position = UDim2.new(0, 8, 0, 52)
InputBox.BackgroundColor3 = Colors.BackgroundSecondary
InputBox.BorderSizePixel = 0
InputBox.Font = Enum.Font.Gotham
InputBox.TextColor3 = Colors.Text
InputBox.TextSize = 12
InputBox.PlaceholderText = "Enter script name..."
InputBox.PlaceholderColor3 = Colors.TextDim
InputBox.Text = ""
InputBox.ClearTextOnFocus = false
InputBox.Parent = MainFrame

-- Execute Button
local ExecuteButton = Instance.new("TextButton")
ExecuteButton.Name = "ExecuteButton"
ExecuteButton.Size = UDim2.new(1, -16, 0, 26)
ExecuteButton.Position = UDim2.new(0, 8, 0, 86)
ExecuteButton.BackgroundColor3 = Colors.Accent
ExecuteButton.BorderSizePixel = 0
ExecuteButton.Font = Enum.Font.GothamSemibold
ExecuteButton.TextColor3 = Colors.Text
ExecuteButton.TextSize = 12
ExecuteButton.Text = "Execute"
ExecuteButton.AutoButtonColor = false
ExecuteButton.Parent = MainFrame

-- Status Label (appears when executing)
local StatusLabel = Instance.new("TextLabel")
StatusLabel.Name = "StatusLabel" 
StatusLabel.Size = UDim2.new(1, -16, 0, 26)
StatusLabel.Position = UDim2.new(0, 8, 0, 86)
StatusLabel.BackgroundTransparency = 1
StatusLabel.Font = Enum.Font.Gotham
StatusLabel.TextColor3 = Colors.Positive
StatusLabel.TextSize = 12
StatusLabel.Text = ""
StatusLabel.Visible = false
StatusLabel.Parent = MainFrame

-- Add subtle pulsing animation to the code icon
spawn(function()
    while wait(0.05) do
        if not LeftBracket.Parent then break end
        
        local pulse = (math.sin(tick() * 2) + 1) / 2 -- Value between 0 and 1
        local color = Color3.fromRGB(
            Colors.Accent.R * 255 + (pulse * 40),
            Colors.Accent.G * 255 + (pulse * 20),
            Colors.Accent.B * 255
        )
        LeftBracket.TextColor3 = color
        RightBracket.TextColor3 = color
    end
end)

-- Pulsing glow effect
spawn(function()
    while wait(0.05) do
        if not Glow.Parent then break end
        
        local pulse = (math.sin(tick() * 1.5) + 1) / 2 -- Value between 0 and 1
        Glow.ImageTransparency = 0.8 + (pulse * 0.1) -- Subtle pulse between 0.8 and 0.9 transparency
    end
end)

-- Make GUI draggable with smooth tweening
local dragging = false
local dragInput
local dragStart
local startPos

local function smoothDrag(input)
    local delta = input.Position - dragStart
    TweenService:Create(MainFrame, TweenInfo.new(0.1), {
        Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    }):Play()
end

Header.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = MainFrame.Position
        
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

Header.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        dragInput = input
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        smoothDrag(input)
    end
end)

-- Button hover effect
local function applyButtonEffects(button, normalColor, hoverColor)
    -- Hover effect
    button.MouseEnter:Connect(function()
        TweenService:Create(button, TweenInfo.new(0.2), {
            BackgroundColor3 = hoverColor
        }):Play()
    end)
    
    button.MouseLeave:Connect(function()
        TweenService:Create(button, TweenInfo.new(0.2), {
            BackgroundColor3 = normalColor
        }):Play()
    end)
    
    -- Click effect
    button.MouseButton1Down:Connect(function()
        TweenService:Create(button, TweenInfo.new(0.1), {
            BackgroundColor3 = normalColor,
            Size = UDim2.new(button.Size.X.Scale, button.Size.X.Offset - 2, button.Size.Y.Scale, button.Size.Y.Offset - 2),
            Position = UDim2.new(button.Position.X.Scale, button.Position.X.Offset + 1, button.Position.Y.Scale, button.Position.Y.Offset + 1)
        }):Play()
    end)
    
    button.MouseButton1Up:Connect(function()
        TweenService:Create(button, TweenInfo.new(0.1), {
            Size = UDim2.new(button.Size.X.Scale, button.Size.X.Offset + 2, button.Size.Y.Scale, button.Size.Y.Offset + 2),
            Position = UDim2.new(button.Position.X.Scale, button.Position.X.Offset - 1, button.Position.Y.Scale, button.Position.Y.Offset - 1)
        }):Play()
    end)
end

applyButtonEffects(ExecuteButton, Colors.Accent, Colors.AccentSecondary)

-- Close button hover effect
CloseButton.MouseEnter:Connect(function()
    TweenService:Create(CloseButton, TweenInfo.new(0.2), {
        TextColor3 = Colors.Negative
    }):Play()
end)

CloseButton.MouseLeave:Connect(function()
    TweenService:Create(CloseButton, TweenInfo.new(0.2), {
        TextColor3 = Colors.TextDim
    }):Play()
end)

-- Close button functionality with smooth fade out
CloseButton.MouseButton1Click:Connect(function()
    -- Fade out animation
    spawn(function()
        for i = 0, 1, 0.1 do 
            MainFrame.BackgroundTransparency = i
            Shadow.ImageTransparency = 0.5 + (i * 0.5)
            Glow.ImageTransparency = 0.8 + (i * 0.2)
            wait()
        end
    end)
    
    -- Shrink animation
    TweenService:Create(MainFrame, TweenInfo.new(0.3, Enum.EasingStyle.Back, Enum.EasingDirection.In), {
        Size = UDim2.new(0, 0, 0, 0),
        Position = UDim2.new(0.5, 0, 0.5, 0)
    }):Play()
    
    -- Wait for animation to finish before destroying
    wait(0.35)
    ExecutorGui:Destroy()
end)

-- Script Management Functions
local scripts = {}
local errorScripts = {}
local scriptCount = 0
local errorCount = 0

-- Function to handle file operations safely
local function manageFile(operation, content)
    local success, result
    if operation == "read" then
        success, result = pcall(function()
            return readfile("list.txt")
        end)
        if not success then
            -- If file doesn't exist, create it
            success, result = pcall(function()
                writefile("list.txt", "-- Example scripts:\n\n[Speed]\ngame.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 50\n[END]\n\n[Jump]\ngame.Players.LocalPlayer.Character.Humanoid.JumpPower = 100\n[END]")
                return "-- Example scripts:\n\n[Speed]\ngame.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 50\n[END]\n\n[Jump]\ngame.Players.LocalPlayer.Character.Humanoid.JumpPower = 100\n[END]"
            end)
        end
    elseif operation == "write" then
        success, result = pcall(function()
            writefile("list.txt", content)
            return true
        end)
    end
    return success, result
end

-- Parse script file and validate format
local function parseScriptFile(content)
    local parsedScripts = {}
    local invalidScripts = {}
    
    local currentName = nil
    local currentScript = nil
    local isInScript = false
    local lineCount = 0
    
    for line in content:gmatch("[^\r\n]+") do
        lineCount = lineCount + 1
        
        -- Check for script name tag [Name]
        local nameMatch = line:match("^%s*%[([^%]]+)%]%s*$")
        
        if nameMatch then
            if nameMatch == "END" then
                -- End of current script
                if isInScript and currentName then
                    -- Valid script
                    parsedScripts[currentName] = currentScript
                else
                    -- Found [END] without matching start tag
                    table.insert(invalidScripts, "Line " .. lineCount .. ": Found [END] without matching start tag")
                end
                isInScript = false
                currentName = nil
                currentScript = nil
            elseif not isInScript then
                -- Start of new script
                currentName = nameMatch
                currentScript = ""
                isInScript = true
            else
                -- Found another [Name] before [END]
                table.insert(invalidScripts, "Line " .. lineCount .. ": Missing [END] for script '" .. currentName .. "'")
                -- Still process this as a new script
                currentName = nameMatch
                currentScript = ""
            end
        elseif isInScript and currentName then
            -- Add to current script content
            if currentScript == "" then
                currentScript = line
            else
                currentScript = currentScript .. "\n" .. line
            end
        end
    end
    
    -- Check if last script was closed properly
    if isInScript and currentName then
        table.insert(invalidScripts, "EOF: Missing [END] for script '" .. currentName .. "'")
    end
    
    return parsedScripts, invalidScripts
end

-- Initialize by loading scripts
local function initializeScripts()
    local success, content = manageFile("read")
    if success then
        scripts, errorScripts = parseScriptFile(content)
        
        scriptCount = 0
        for _ in pairs(scripts) do
            scriptCount = scriptCount + 1
        end
        
        errorCount = #errorScripts
        
        -- Update status label
        if errorCount > 0 then
            CountLabel.Text = scriptCount .. " scripts â€¢ " .. errorCount .. " format errors"
            CountLabel.TextColor3 = Colors.Warning
        else
            CountLabel.Text = scriptCount .. " scripts ready"
            CountLabel.TextColor3 = Colors.Positive
        end
    else
        CountLabel.Text = "Error: Could not read script file"
        CountLabel.TextColor3 = Colors.Negative
    end
end

-- Show status message with animation
local function showStatus(message, color, duration)
    -- Hide execute button temporarily
    ExecuteButton.Visible = false
    StatusLabel.Visible = true
    StatusLabel.Text = message
    StatusLabel.TextColor3 = color
    StatusLabel.TextTransparency = 1
    
    -- Fade in
    TweenService:Create(StatusLabel, TweenInfo.new(0.2), {
        TextTransparency = 0
    }):Play()
    
    -- Wait and fade out
    wait(duration or 1.5)
    
    TweenService:Create(StatusLabel, TweenInfo.new(0.2), {
        TextTransparency = 1
    }):Play()
    
    wait(0.2)
    StatusLabel.Visible = false
    ExecuteButton.Visible = true
end

-- Execute script by name
local function executeScriptByName(name)
    -- Reload scripts to get the latest version
    initializeScripts()
    
    if scripts[name] then
        -- Execute with pcall for safety
        local success, errorMsg = pcall(function()
            loadstring(scripts[name])()
        end)
        
        if success then
            showStatus("Executed: " .. name, Colors.Positive)
        else
            local shortError = tostring(errorMsg):sub(1, 30)
            if #tostring(errorMsg) > 30 then
                shortError = shortError .. "..."
            end
            showStatus("Error: " .. shortError, Colors.Negative, 2)
        end
    else
        showStatus("Script not found: " .. name, Colors.Negative)
    end
end

-- Button press event
ExecuteButton.MouseButton1Click:Connect(function()
    local name = InputBox.Text
    if name and name ~= "" then
        executeScriptByName(name)
    else
        showStatus("Please enter a script name", Colors.Warning)
    end
end)

-- Allow pressing Enter to execute
InputBox.FocusLost:Connect(function(enterPressed)
    if enterPressed then
        local name = InputBox.Text
        if name and name ~= "" then
            executeScriptByName(name)
        end
    end
end)

-- Initialize the script system
initializeScripts()

-- Console output for formatter errors
if errorCount > 0 then
    warn("Script format errors were found:")
    for _, errorMsg in ipairs(errorScripts) do
        warn("- " .. errorMsg)
    end
end

-- Smooth opening animation on startup
MainFrame.BackgroundTransparency = 1
Shadow.ImageTransparency = 1
Glow.ImageTransparency = 1

-- Fade in elements
local function fadeIn(element, finalTransparency)
    TweenService:Create(element, TweenInfo.new(0.5), {
        BackgroundTransparency = finalTransparency or 0
    }):Play()
end

local function fadeInImage(element, finalTransparency)
    TweenService:Create(element, TweenInfo.new(0.5), {
        ImageTransparency = finalTransparency or 0
    }):Play()
end

-- Starting position for animation
MainFrame.Size = UDim2.new(0, 0, 0, 0)
MainFrame.Position = UDim2.new(0.5, 0, 0.5, 0)

-- Expand animation
TweenService:Create(MainFrame, TweenInfo.new(0.5, Enum.EasingStyle.Back, Enum.EasingDirection.Out), {
    Size = UDim2.new(0, 240, 0, 120),
    Position = UDim2.new(0.5, -120, 0.5, -60)
}):Play()

wait(0.1)
fadeIn(MainFrame)
fadeInImage(Shadow, 0.5)
fadeInImage(Glow, 0.8)
